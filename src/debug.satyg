@stage: persistent
@import: string

module Debug : sig
  %% [Debug.print msg] simply prints [msg] to the console.
  %% No modification nor formatting is performed beforehaand.
  val print : string -> unit

  %% [Debug.log msg] prints [msg] to the console in a structured format.
  val log : string -> unit
end = struct
  let print = display-message

  type color-spec =
    | Black
    | Red
    | Green
    | Yellow
    | Blue
    | Magenta
    | Cyan
    | White

  let color-num c = match c with
  | Black -> 0
  | Red -> 1
  | Green -> 2
  | Yellow -> 3
  | Blue -> 4
  | Magenta -> 5
  | Cyan -> 6
  | White -> 7

  let esc-code = String.of-codepoints [27]

  let esc-sgr n = esc-code ^ `[` ^ (String.of-int n) ^ `m` % select graphic rendition
  let esc-sgr-reset = esc-sgr 0
  let esc-sgr-fg-color c = esc-sgr (30 + color-num c)
  let esc-sgr-bg-color c = esc-sgr (40 + color-num c)

  let log msg = print (esc-sgr-fg-color Green ^ `[debug.log] `# ^ msg ^ esc-sgr-reset)
end